<?xml version="1.0" encoding="UTF-8"?>
<!--<web-app xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
          http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
        version="3.0" metadata-complete="false">-->
<web-app id="WebApp_ID" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
         http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

  <display-name>Archetype Created Web Application</display-name>
  <welcome-file-list>
    <welcome-file>/weixin/index.htm</welcome-file>
  </welcome-file-list>

  <!-- 1. 通过ContextLoaderListener在web app启动的时候， 获取contextConfigLocation配置文件的.xml，并进行Spring相关初始化工作 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- spring的配置文件-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:META-INF/spring/*.xml</param-value>
  </context-param>

  <!-- spring mvc核心：分发servlet -->
  <servlet>
    <servlet-name>demo</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- spring mvc的配置文件，不配置则默认demoMvc-servlet.xml -->
    <!--<init-param>
      <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:springMVC.xml</param-value>
    </init-param>-->
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>demo</servlet-name>
    <url-pattern>*.htm</url-pattern>
    <!--<url-pattern>/swagger-resources/configuration/ui</url-pattern>-->
    <!--<url-pattern>/swagger-resources/configuration/security</url-pattern>-->
    <!--<url-pattern>/swagger-resources/*</url-pattern>-->
    <!--<url-pattern>/v2/api-docs</url-pattern>-->
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>demo</servlet-name>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>
    <!--<servlet-mapping>-->
        <!--<servlet-name>demo</servlet-name>-->
        <!--<url-pattern>/weixin/*</url-pattern>-->
    <!--</servlet-mapping>-->
  <!--<servlet-mapping>-->
    <!--<servlet-name>demoMvc</servlet-name>-->
    <!--<url-pattern>/swagger-resources/configuration/ui</url-pattern>-->
  <!--</servlet-mapping>-->
  <!--<servlet-mapping>-->
    <!--<servlet-name>demoMvc</servlet-name>-->
    <!--<url-pattern>/swagger-resources/configuration/security</url-pattern>-->
  <!--</servlet-mapping>-->
  <!--&lt;!&ndash;<servlet-mapping>&ndash;&gt;-->
    <!--&lt;!&ndash;<servlet-name>demoMvc</servlet-name>&ndash;&gt;-->
    <!--&lt;!&ndash;<url-pattern>/swagger-resources/*</url-pattern>&ndash;&gt;-->
  <!--&lt;!&ndash;</servlet-mapping>&ndash;&gt;-->
  <!--<servlet-mapping>-->
    <!--<servlet-name>demoMvc</servlet-name>-->
    <!--<url-pattern>/v2/api-docs</url-pattern>-->
  <!--</servlet-mapping>-->
  <!--<servlet-mapping>-->
    <!--<servlet-name>demoMvc</servlet-name>-->
    <!--<url-pattern>/swagger-ui.html</url-pattern>-->
  <!--</servlet-mapping>-->

    <!--<filter>
        <filter-name>LoginFilter</filter-name>
        <filter-class>com.ucmed.filter.LoginFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>LoginFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>-->

    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>*.htm</url-pattern>
    </filter-mapping>

    <!--跨域支持-->
    <filter>
        <filter-name>CORS</filter-name>
        <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
        <init-param>
            <param-name>cors.allowOrigin</param-name>
            <param-value>*</param-value>
        </init-param>
        <init-param>
            <param-name>cors.supportedMethods</param-name>
            <param-value>GET,POST,HEAD,PUT,DELETE,OPTIONS</param-value>
        </init-param>
        <init-param>
            <param-name>cors.supportedHeaders</param-name>
            <param-value>Accept,Origin,X-Requested-With,Content-Type,Last-Modified</param-value>
        </init-param>
        <init-param>
            <param-name>cors.exposedHeaders</param-name>
            <param-value>Set-Cookie</param-value>
        </init-param>
        <init-param>
            <param-name>cors.supportsCredentials</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CORS</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

</web-app>
